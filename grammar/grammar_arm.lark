start: directive? label? operation?
label: LABEL
LABEL: CNAME ":" 
operation: opcode operand*
directive: /\..*/ | "#" CNAME
operand: (reglist 
        | register
        | immediate 
        | address 
        | label_target
        | indirect
        | dotlabel
        | proc_load 
        | shifted_register ) writeback?



dotlabel: DOTLABEL 
DOTLABEL: "." CNAME

reglist: "{" (register | register_range)+ "}"  // ARM v7
register_range: register "-" register

indirect: "[" register offset? "]"
offset: immediate | proc_load | register | shifted_register
immediate: imm_value  | "#" imm_value

address: "=" imm_value

?imm_value:  hex_val | dec_val
hex_val.2: "0x" HEXNUM
?dec_val: NUMBER | SIGNED_NUMBER

label_target: CNAME | DOTLABEL
shifted_register.10: register shift_type shift_by?
shift_by.8: immediate | register

// opcode: CNAME
opcode: CDNAME
CDNAME: ("_"|LETTER) ("_"|"."|LETTER|DIGIT)* // adding dot for b.eq

proc_load: ":" mode ":" label_target | "#:" mode ":" label_target

target: dotlabel | label_target

mode: CNAME
// MODE: "lo12" | "pg_hi21"

HEXNUM: HEXDIGIT+

%import common.CNAME
%import common.SIGNED_NUMBER
%import common.DIGIT
%import common.NUMBER
%import common.LETTER
%import common.HEXDIGIT
%import common.WS
%import common.WS_INLINE
%import common.NEWLINE
SLCOMMENT: "//" /.*/ 
COMMENT: ";" /[^\n]/*
%ignore WS
%ignore COMMENT
%ignore SLCOMMENT
%ignore ","

addr_mode: ADDR_MODE
ADDR_MODE: "IA"
    | "IB"
    | "DA"
    | "DB"

// addr_mode: 
//     | "IA" -> ia
//     | "IB" -> ib
//     | "DA" -> da
//     | "DB" -> db

writeback: "!"

condition_code: CCODE

CCODE: "EQ" // Z set	Equal
    | "NE" // Z clear	Not equal
    | "CS" // or HS	C set	Higher or same (unsigned >= )
    | "CC" // or LO	C clear	Lower (unsigned < )
    | "MI" // N set	Negative
    | "PL" // N clear	Positive or zero
    | "VS" // V set	Overflow
    | "VC" // V clear	No overflow
    | "HI" // C set and Z clear	Higher (unsigned >)
    | "LS" // C clear or Z set	Lower or same (unsigned <=)
    | "GE" // N and V the same	Signed >=
    | "LT" // N and V differ	Signed <
    | "GT" // Z clear, N and V the same	Signed >
    | "LE" // Z set, N and V differ	Signed <=
    | "AL" // Any	Always. This suffix is normally omitted.


register.5: half_reg | full_reg | float_reg

float_reg: float16 | float32 | double64
float16: FL16
FL16: "h" + NUMBER
float32: FL32 
FL32: "s" + NUMBER
double64: FL64
FL64: "d" + NUMBER

half_reg: HALFREG 
HALFREG: "w" + NUMBER | "wzr"
full_reg:  FULLREG
FULLREG: "x" + NUMBER | "xzr" | NAMED_REG

NAMED_REG: "sp" | "fp" | "lr" | "xr"

shift_type: SHIFT_TYPE
SHIFT_TYPE:  "lsl" | "lsr" | "asr" | "ror" | "rrx"

